/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2011-2012 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::ksFvPatchVectorField

Group
    grpInletBoundaryConditions

Description
    This velocity inlet boundary condition is applied to patches where the
    pressure is specified.  The inflow velocity is obtained from the flux with
    a direction normal to the patch faces.

    \heading Patch usage

    Example of the boundary condition specification:
    \verbatim
    myPatch
    {
        type            ks;
        phi             phi;
        rho             rho;
        value           uniform 0;
    }
    \endverbatim

Note
    If reverse flow is possible or expected use
    the pressureInletOutletVelocityFvPatchVectorField condition instead.

SeeAlso
    Foam::fixedValueFvPatchField
    Foam::pressureInletOutletVelocityFvPatchVectorField

SourceFiles
    ksFvPatchVectorField.C

\*---------------------------------------------------------------------------*/

#ifndef ksFvPatchVectorField_H
#define ksFvPatchVectorField_H

#include "fvPatchFields.H"
#include "fixedValueFvPatchFields.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
           Class ksFvPatchVectorField Declaration
\*---------------------------------------------------------------------------*/

class ksFvPatchVectorField
:
    public fixedValueFvPatchVectorField
{
        vector Umean_;
        scalar h_;
        scalar m_;
        scalar scale_;
        scalar cucaoduxishu_;
        scalar deltaT_;
        label curTimeIndex_;
        vector currentScale() const;


public:

    //- Runtime type information
    TypeName("ks");


    // Constructors

        //- Construct from patch and internal field
        ksFvPatchVectorField
        (
            const fvPatch&,
            const DimensionedField<vector, volMesh>&
        );

        //- Construct from patch, internal field and dictionary
        ksFvPatchVectorField
        (
            const fvPatch&,
            const DimensionedField<vector, volMesh>&,
            const dictionary&
        );

        //- Construct by mapping given ksFvPatchVectorField
        //  onto a new patch
        ksFvPatchVectorField
        (
            const ksFvPatchVectorField&,
            const fvPatch&,
            const DimensionedField<vector, volMesh>&,
            const fvPatchFieldMapper&
        );

        //- Construct as copy
        ksFvPatchVectorField
        (
            const ksFvPatchVectorField&
        );

        //- Construct and return a clone
        virtual tmp<fvPatchVectorField> clone() const
        {
            return tmp<fvPatchVectorField>
            (
                new ksFvPatchVectorField(*this)
            );
        }

        //- Construct as copy setting internal field reference
        ksFvPatchVectorField
        (
            const ksFvPatchVectorField&,
            const DimensionedField<vector, volMesh>&
        );

        //- Construct and return a clone setting internal field reference
        virtual tmp<fvPatchVectorField> clone
        (
            const DimensionedField<vector, volMesh>& iF
        ) const
        {
            return tmp<fvPatchVectorField>
            (
                new ksFvPatchVectorField(*this, iF)
            );
        }


    // Member functions

        // Access

            
            vector& Umean()
            {
                return Umean_;
            }
            scalar& h()
            {
                return h_;
            }
            scalar& m()
            {
                return m_;
            }
            scalar& scale()
            {
                return scale_;
            }
            scalar& cucaoduxishu()
            {
                return cucaoduxishu_;
            }
            scalar& deltaT()
            {
                return deltaT_;
            }

        //- Update the coefficients associated with the patch field
        virtual void updateCoeffs();//这个负责更新边界值的函数包括一个网格边界速度合成函数

        //- Write
        virtual void write(Ostream&) const;


    // Member operators

        //virtual void operator=(const fvPatchField<vector>& pvf);
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
